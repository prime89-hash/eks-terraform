# Default values for webapp-3tier
replicaCount: 3

image:
  repository: ACCOUNT_ID.dkr.ecr.us-west-2.amazonaws.com/webapp-3tier-app
  pullPolicy: Always
  tag: "latest"

nameOverride: ""
fullnameOverride: ""

serviceAccount:
  create: true
  annotations:
    eks.amazonaws.com/role-arn: arn:aws:iam::ACCOUNT_ID:role/webapp-3tier-pod-role
  name: "webapp-service-account"

podAnnotations:
  prometheus.io/scrape: "true"
  prometheus.io/port: "8080"
  prometheus.io/path: "/actuator/prometheus"

podSecurityContext:
  runAsNonRoot: true
  runAsUser: 1001
  runAsGroup: 1001
  fsGroup: 1001

securityContext:
  allowPrivilegeEscalation: false
  readOnlyRootFilesystem: true
  capabilities:
    drop:
    - ALL

service:
  type: ClusterIP
  port: 80
  targetPort: 8080
  metricsPort: 8080

ingress:
  enabled: true
  className: "alb"
  annotations:
    kubernetes.io/ingress.class: alb
    alb.ingress.kubernetes.io/scheme: internet-facing
    alb.ingress.kubernetes.io/target-type: ip
    alb.ingress.kubernetes.io/listen-ports: '[{"HTTP": 80}, {"HTTPS": 443}]'
    alb.ingress.kubernetes.io/ssl-redirect: '443'
    alb.ingress.kubernetes.io/certificate-arn: CERTIFICATE_ARN
    alb.ingress.kubernetes.io/security-groups: ALB_SECURITY_GROUP_ID
    alb.ingress.kubernetes.io/subnets: PUBLIC_SUBNET_IDS
    alb.ingress.kubernetes.io/healthcheck-path: /health
  hosts:
    - host: webapp.example.com
      paths:
        - path: /
          pathType: Prefix
  tls: []

resources:
  requests:
    memory: "512Mi"
    cpu: "250m"
  limits:
    memory: "1Gi"
    cpu: "500m"

autoscaling:
  enabled: true
  minReplicas: 2
  maxReplicas: 10
  targetCPUUtilizationPercentage: 70
  targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}

# Database configuration
database:
  host: "DB_HOST"
  port: 5432
  name: "webapp"
  username: "webapp_user"
  passwordSecret: "webapp-secrets"
  passwordKey: "db-password"

# Environment configuration
environment: "production"

# Health check configuration
healthCheck:
  enabled: true
  path: "/health"
  initialDelaySeconds: 30
  periodSeconds: 10
  timeoutSeconds: 5
  failureThreshold: 3

readinessProbe:
  enabled: true
  path: "/health"
  initialDelaySeconds: 5
  periodSeconds: 5
  timeoutSeconds: 3
  failureThreshold: 3

# Network policy
networkPolicy:
  enabled: true
  ingress:
    - from:
      - namespaceSelector:
          matchLabels:
            name: kube-system
      ports:
      - protocol: TCP
        port: 8080
  egress:
    - to: []
      ports:
      - protocol: TCP
        port: 5432  # PostgreSQL
      - protocol: TCP
        port: 443   # HTTPS
      - protocol: TCP
        port: 53    # DNS
      - protocol: UDP
        port: 53    # DNS

# Monitoring
monitoring:
  serviceMonitor:
    enabled: true
    namespace: monitoring
    interval: 30s
    path: /actuator/prometheus
    labels:
      app: webapp-3tier
      release: prometheus
